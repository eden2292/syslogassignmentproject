@using Syncfusion.Blazor.Navigations.Internal
@using System.Runtime.Loader
@using Syncfusion.Blazor.Data
@using SyslogAssignmentProject.Services
@using System.Collections.Generic;
@inject NavigationManager NavigationManager
@using static Globals

<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">T6S3</a>
    </div>
</div>

<!DOCTYPE html>
<html>
<head>
    <style>
        /* CSS styles for the tree view */
        .tree {
            list-style-type: none;
            margin: 0;
            padding: 0;
            background-color: #1f1b5b;
        }

        .tree li {
            margin: 10px 0;
        }

        .tree li:before {
            content: "→";
            margin-right: 5px;
            cursor: pointer;
            color: white;
        }

        .tree li.collapsed:before {
            content: "▶";
            color: white;
        }

        .tree li.collapsed.after{
            content: "▼";
            color: red;
        }
        .button{
          background-color: #1f1b5b;
          border: none;
          color: white;
        }
        
    </style>
</head>
<body>
<ul class="tree">
    <li class="collapsed">
        <button class="button" onclick="@toggle">Radios</button>
        <ul class="tree" style=@temp>
            @foreach (Radio _currentRadio in S_RadioList.RadioStore)
            {
                <li>
                    <button class="button" @onclick="() => NavigateRadio(FormatRadio(_currentRadio))">
                        @_currentRadio.IPAddress.ToString() (@_currentRadio.TransportProtocol)
                    </button>
                </li>
            }

        </ul>
    </li>
    <li class="collapsed">
        <button class="button" onclick="@toggle2">Severity</button>
        <ul class="tree" style="@temp2">
        <li>
            <button class="button" onclick="@NavigateInfo">Info</button>
        </li>
        <li>
            <button class="button" onclick="@NavigateDebug">Debug</button>
        </li>
            <li>
                <button class="button" onclick="@NavigateWarning">Warning</button>
            </li>
            <li>
                <button class="button" onclick="@NavigateError">Error</button>
            </li>
        </ul>

    </li>
    <li>
        <button class="button" @onclick="NavigateToSettings">Settings</button>
    </li>
    <li>
        <button class="button" @onclick="NavigateHome">Live Feed</button>
    </li>
</ul>

</body>
</html>

@code
{
  protected override void OnInitialized()
  {
    S_RadioList.ListChanged += HandleListChanged;
  }

  private void HandleListChanged()
  {
    InvokeAsync(() =>
    {
      StateHasChanged();
    }
    );
  }
  String temp = "display:none;";

  String temp2 = "display:none;";

  public void toggle()
  {
    if(temp == "display:none;")
    {
      temp = "display:block;";
    }
    else
    {
      temp = "display:none;";
    } 
  }

  public void toggle2()
  {
    if(temp2 == "display:none;")
    {
      temp2 = "display:block;";
    }
    else
    {
      temp2 = "display:none;";
    } 
  }

  public String Radios { get; set; }
  String[] _severity = { "Debug", "Info", "Warning", "Error" };

  private void NavigateToSettings()
  {
    NavigationManager.NavigateTo("/settings");
  }

  private void NavigateHome()
  {
    NavigationManager.NavigateTo("/");
  }

  private void NavigateInfo()
  {
    NavigationManager.NavigateTo("/severityInfo");
  }

  private void NavigateDebug()
  {
    NavigationManager.NavigateTo("/severityDebug");
  }

  private void NavigateError()
  {
    NavigationManager.NavigateTo("/severityError");
  }

  private void NavigateWarning(String pageId)
  {
    NavigationManager.NavigateTo("/severityWarning");
  }

  private void NavigateRadio(string pageLink)
  {
    NavigationManager.NavigateTo($"/radioDisplay/{pageLink}");
  }
  private string FormatRadio(Radio toFormat)
  {
    return $"{toFormat.IPAddress}-{toFormat.TransportProtocol}";
  }

}
