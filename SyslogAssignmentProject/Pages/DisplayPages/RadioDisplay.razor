@page "/radioDisplay"
@inject RadioInjection _injectedRadio;
@inject ListServicer _injectedList;
@inject GlobalInjection _injectedGlobals;
@inject RadioListServicer _injectedRadioList;


<h1>RadioDisplay</h1>
<img src="@_injectedRadio.radio.PathOfImage" width="292" height="140">

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    
    <MudSwitch @bind-Checked="@_injectedRadio.radio.Hidden" ThumbIcon="@(_injectedRadio.radio.Hidden==false ? Icons.Material.Filled.Done : Icons.Material.Filled.Close)" ThumbIconColor="@(_injectedRadio.radio.Hidden ? Color.Success : Color.Error)">Changing</MudSwitch>
    <MudPaper Elevation="5">
        <MudSelect T="string" Placeholder="Severity" @bind-Value="SelectedSeverity" FullWidth=false Dense=true>
            <MudSelectItem Value="@("")">All</MudSelectItem>
            <MudSelectItem Value="@("Debug")">Debug</MudSelectItem>
            <MudSelectItem Value="@("Info")">Info</MudSelectItem>
            <MudSelectItem Value="@("Warning")">Warning</MudSelectItem>
            <MudSelectItem Value="@("Error")">Error</MudSelectItem>
        </MudSelect>
    </MudPaper>
    <MudTable Items="@messageList.OrderByDescending(x => x.SentDateTime)" Hover="true" AllowUnsorted="true" Dense="true" Height="50em" FixedHeader="true" Filter="new Func<SyslogMessage, bool>(FilterFunc1)">
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage, object>(x => x.ReceivingIP)"></MudTableSortLabel>Recieving IP</MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage, object>(x => x.SentDateTime)"> Sent Date/Time</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage, object>(x => x.ReceivedDateTime)">Received Date/Time</MudTableSortLabel></MudTh>
            <MudTh>Transmitter IP</MudTh>
            <MudTh>Severity</MudTh>
            <MudTh>Message</MudTh>
        </HeaderContent>
        <RowTemplate>
            @if (@context.Severity == 0)
            {
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@context.ReceivingIP</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@context.SentDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@context.ReceivedDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@($"{context.SenderIP} | {context.SenderPortNumber}")</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@context.Severity</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_DEBUG_COLOUR}")>@context.EndMessage</MudTd>
            }
            @if (@context.Severity == 1)
            {
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@context.ReceivingIP</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@context.SentDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@context.ReceivedDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@($"{context.SenderIP} | {context.SenderPortNumber}")</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@context.Severity</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_WARNING_COLOUR}")>@context.EndMessage</MudTd>
            }
            @if (@context.Severity >= 2 && context.Severity <= 3)
            {
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@context.ReceivingIP</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@context.SentDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@context.ReceivedDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@($"{context.SenderIP} | {context.SenderPortNumber}")</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@context.Severity</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_ERROR_COLOUR}")>@context.EndMessage</MudTd>
            }
            @if (@context.Severity >= 4 && context.Severity <= 7)
            {
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@context.ReceivingIP</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@context.SentDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@context.ReceivedDateTime</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@($"{context.SenderIP} | {context.SenderPortNumber}")</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@context.Severity</MudTd>
                <MudTd Style=@($"color: {_injectedGlobals.DEFAULT_INFO_COLOUR}")>@context.EndMessage</MudTd>
            }
        </RowTemplate>
    </MudTable>

</MudContainer>

@code {
    private String SelectedSeverity;
    private List<SyslogMessage> messageList = new List<SyslogMessage>();
    private bool FilterFunc1(SyslogMessage element) => FilterFunc(element);

    protected override void OnInitialized()
    {
        _injectedList.ListChanged += HandleListChanged;
       CallMessages();
    }
    /// <summary>
    /// Updates component when list updates.
    /// </summary>
    private void HandleListChanged()
    {
        //_listOfMessages = _injectedGlobals.S_LiveFeedMessages.FilterList(_injectedRadio.radio.IPAddress, "None");
        CallMessages();
        InvokeAsync(() =>{StateHasChanged();});
    }

    private void CallMessages()
    {
        messageList.Clear();
        foreach(SyslogMessage msg in _injectedList.SyslogMessageList)
        {
            if (msg.SenderIP == _injectedRadio.radio.IPAddress)
            {
                messageList.Add(msg);
            }
        }
    }

    private bool FilterFunc(SyslogMessage element)
    {
        if (string.IsNullOrWhiteSpace(SelectedSeverity))
            return true;
        if (element.Severity == 0 && SelectedSeverity == "Debug")
            return true;
        if (element.Severity == 1 && SelectedSeverity == "Warning")
            return true;
        if (element.Severity >= 2 && element.Severity <= 3 && SelectedSeverity == "Error")
            return true;
        if (element.Severity >= 4 && SelectedSeverity == "Info")
            return true;
        return false;
    }
}