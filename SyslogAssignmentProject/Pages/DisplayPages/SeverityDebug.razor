@page "/severityDebug"
@inject ListServicer _injectedList;
@inject GlobalInjection _injectedGlobals;
@inject RadioListServicer _injectedRadioList;

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge">
    
  <MudPaper Elevation="5" Class="pa-2 mr-5 my-5" MaxWidth="20em" MaxHeight="10em">
        <MudSelect T="string" Placeholder="IPs" @bind-Value= "SelectedIP" FullWidth=false Dense=true>
            <MudSelectItem Value="@("")">All</MudSelectItem>
            @* Allow filtering by IP Address within the severity page *@
                        @foreach (string _ipAddress in _injectedRadioList.UniqueIpAddresses())
                        {
                            <MudSelectItem Value="@_ipAddress" />
                        }
                    </MudSelect>
            </MudPaper>

    <MudTable Items="@messageList.OrderByDescending(x => x.SentDateTime)" Hover="true" AllowUnsorted="true" Dense="true" Height="50em" FixedHeader="true" Filter="new Func<SyslogMessage,bool>(FilterFunc1)">
        <HeaderContent>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage,object>(x => x.ReceivingIP)"></MudTableSortLabel>Recieving IP</MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage, object>(x => x.SentDateTime)"> Sent Date/Time</MudTableSortLabel></MudTh>
            <MudTh><MudTableSortLabel SortBy="new Func<SyslogMessage, object>(x => x.ReceivedDateTime)">Received Date/Time</MudTableSortLabel></MudTh>
            <MudTh>Transmitter IP</MudTh>
            <MudTh>Severity</MudTh>
            <MudTh>Message</MudTh>
        </HeaderContent>
        <RowTemplate>
                <MudTd Style=@($"color: {context.HexColour}")>@context.FormatIp(context.ReceivingIP, context.ReceivingPortNumber)</MudTd>
      <MudTd Style=@($"color: {context.HexColour}")>@context.SentDateTime</MudTd>
      <MudTd Style=@($"color: {context.HexColour}")>@context.ReceivedDateTime</MudTd>
      <MudTd Style=@($"color: {context.HexColour}")>@context.FormatIp(context.SenderIP, context.SenderPortNumber)</MudTd>
        <MudTd Style=@($"color: {context.HexColour}")>@context.Severity</MudTd>
        <MudTd Style=@($"color: {context.HexColour}")>@context.EndMessage</MudTd>
      </RowTemplate>
            </MudTable>

</MudContainer>

@code {
    //
    String SelectedIP;
    private List<SyslogMessage> messageList = new List<SyslogMessage>();

    protected override void OnInitialized()
    {

    }
    
    private void HandleListChanged()
    {
        CallMessages();
        InvokeAsync(() =>{StateHasChanged();});
    }
    
    private void CallMessages()
    {
        messageList.Clear();
        foreach(SyslogMessage msg in _injectedList.SyslogMessageList)
        {
            if (msg.Severity == 0)
            {
                messageList.Add(msg);
            }
        }
    }

    private bool FilterFunc1(SyslogMessage element) => FilterFunc(element);

    private bool FilterFunc(SyslogMessage element)
    {
        if (string.IsNullOrWhiteSpace(SelectedIP))
            return true;
        if (element.SenderIP.Contains(SelectedIP, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }
}